{"version":3,"sources":["hoc/withAuthRedirect.jsx","Redux/dialogs-reducer.jsx","Components/News/News.module.css","Components/Settings/Settings.module.css","Components/Profile/Profile.module.css","Components/Sidebar/Sidebar.module.css","Components/Users/Users.module.css","reportWebVitals.js","Components/Sidebar/Sidebar.jsx","Components/News/News.jsx","Components/Settings/Settings.jsx","api/api.jsx","utils/object-helpers.js","Redux/users-reducer.jsx","Components/Users/Paginator.jsx","assets/images/user.jpg","Components/Users/UserItem.jsx","Components/Users/Users.jsx","assets/images/preloader.svg","Components/common/Preloader/Preloader.jsx","Redux/users-selectors.jsx","Components/Users/UsersContainer.jsx","Components/Profile/ProfileAbout/ProfileStatusWithHooks.jsx","Components/Profile/ProfileAbout/ProfileInfo.jsx","Components/Profile/Posts/OnePost/OnePost.jsx","Components/Profile/Posts/Posts.jsx","Redux/profile-reducer.jsx","Components/Profile/Posts/PostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx","Components/Header/Header.jsx","Redux/auth-reducer.jsx","Components/Header/HeaderContainer.jsx","Components/Login/Login.jsx","Redux/app-reducer.jsx","Redux/redux-store.js","App.js","index.js","Components/common/FormControls/FormControls.js","utils/validators/validators.js","Components/Profile/Posts/OnePost/OnePost.module.css","Components/Profile/Posts/Posts.module.css","Components/common/FormControls/FormControls.module.css","Components/Header/Header.module.css","Components/Login/Login.module.css"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","SEND_MESSAGE","initialState","dialogsData","id","name","messagesData","value","creationMessage","newMessageBody","type","dialogsReducer","action","module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Sidebar","className","s","app_sidebar","item","activeClassName","activeLink","News","app_news","Settings","app_settings","instance","axios","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","response","data","follow","userId","post","unfollow","delete","profileAPI","status","put","authAPI","email","password","rememberMe","updateObjectInArray","items","itemId","objectName","object","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","usersList","totalUsersCount","isFetching","followingProgress","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnFollow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","users","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","onClick","arrow","p","cn","selectedPage","span","e","UserItem","user","wantToUnfollow","wantToFollow","wrapper","width","src","photos","small","userPhoto","alt","disabled","some","Users","usersItems","app_users","Preloader","preloader","getUsersList","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getProgressFetching","getFollowingProgress","usersContainer","pageNumber","unfollowUser","followUser","totalCount","bind","ProfileStatusWithHooks","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onChange","currentTarget","onBlur","updateStatus","autoFocus","ProfileInfo","profile","large","OnePost","postItem","message","likesPost","likecount","Posts","memo","postsElements","postsData","likesCount","creationPost","PostsFormRedux","onSubmit","values","createPost","newPostBody","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","placeholder","component","Textarea","validate","requiredField","ADD_POST","SET_USERS_PROFILE","SET_STATUS","DELETE_POST","setUserProfile","profileReducer","newPost","newPostText","postId","PostsContainer","profilePage","Profile","app_profile","ProfileContainer","match","params","authorizedUserId","history","setUserInBody","getStatus","compose","withRouter","Header","app_header","loginBlock","login","logout","SET_USER_DATA","setAuthUserData","payload","setAuthMe","authReducer","HeaderContainer","LoginReduxForm","error","fieldCreator","Input","formError","messages","length","stopSubmit","_error","formData","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","messagesPage","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","MessagesContainer","lazy","App","initializeApp","path","render","fallback","UsersContainer","AppContainer","promise","Promise","all","MainApp","StrictMode","ReactDOM","document","getElementById","FormControl","input","meta","child","hasError","touched","form_control","children","restProps","validators","maxLength"],"mappings":"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","file":"static/js/main.bcb96711.chunk.js","sourcesContent":["import React from \"react\";\nimport {Redirect} from \"react-router\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToPropsForRedirect = (state) => {\n    return {\n        isAuth: state.auth.isAuth,\n    }\n}\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) {\n                return <Redirect to={'/login'}/>\n            }\n            return <Component {...this.props} />\n\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n    return ConnectedAuthRedirectComponent\n}\n","const SEND_MESSAGE = 'SEND_MESSAGE';\nlet initialState = {\n    dialogsData: [\n        {id: 1, name: 'Artik'},\n        {id: 2, name: 'Vlados'},\n        {id: 3, name: 'Lukas'},\n        {id: 4, name: 'Iryna'},\n        {id: 5, name: 'Artikus'},\n        {id: 6, name: 'Roman'},\n    ],\n    messagesData: [\n        {value: 'Hi!'},\n        {value: 'Good'},\n\n    ],\n}\nconst dialogsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SEND_MESSAGE: {\n            return {\n                ...state,\n                messagesData: [...state.messagesData, {id: 6, value: action.newMessageBody,}],\n            };\n        }\n        default:\n            return state;\n    }\n    return state\n}\n\nexport let creationMessage = (newMessageBody) => {\n    return {\n        type: SEND_MESSAGE,\n        newMessageBody\n    }\n}\n\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app_news\":\"News_app_news__3ayQO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app_settings\":\"Settings_app_settings__1sjIp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app_profile\":\"Profile_app_profile__37eop\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app_sidebar\":\"Sidebar_app_sidebar__igAtY\",\"item\":\"Sidebar_item__2Krw6\",\"activeLink\":\"Sidebar_activeLink__3kusX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app_users\":\"Users_app_users__3_kR9\",\"wrapper\":\"Users_wrapper__1KgPN\",\"selectedPage\":\"Users_selectedPage__21xQ4\",\"span\":\"Users_span__2FtuS\",\"arrow\":\"Users_arrow__1BHvi\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import s from \"./Sidebar.module.css\";\nimport {NavLink} from \"react-router-dom\";\nimport React from \"react\";\n\n\nconst Sidebar = (props) => {\n    return (\n        <nav className={s.app_sidebar}>\n            <div className={s.item}>\n                <NavLink to=\"/my_page\" activeClassName={s.activeLink}>My page</NavLink></div>\n            <br/>\n            <div className={s.item}>\n                <NavLink to='/users' activeClassName={s.activeLink}> Users\n                </NavLink>\n            </div>\n            <br/>\n            <div className={s.item}>\n                <NavLink to=\"/my_messages\" activeClassName={s.activeLink}>Messages</NavLink>\n            </div>\n            <br/>\n            <div className={s.item}>\n                <NavLink to='/my_news' activeClassName={s.activeLink}>News</NavLink>\n            </div>\n            <br/>\n            <div className={s.item}>\n                <NavLink to='/my_settings' activeClassName={s.activeLink}> Settings</NavLink>\n            </div>\n            <br/>\n\n            <br/>\n        </nav>\n    );\n};\nexport default Sidebar;\n","import React from 'react';\nimport s from './News.module.css'\nconst News = () => {\n    return(\n        <div className={s.app_news}>\n             <h1>News</h1>\n        </div>\n    )\n}\nexport default News;","import s from './Settings.module.css';\nimport React from 'react';\nconst Settings = () => {\n    return (\n        <div className={s.app_settings}>\n            <h1>Settings</h1>\n        </div>\n    )\n}\nexport default Settings;","import * as axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    withCredentials: true,\n    headers: {\n        'API-KEY': 'd46b382a-8cc4-4849-9fea-4286772e1fb9',\n    }\n\n})\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 100) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => {\n                return response.data\n            })\n    },\n    follow(userId) {\n        return instance.post(`follow/${userId}`)\n    },\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`)\n    },\n\n}\nexport const profileAPI = {\n    setUserBodyProfile(userId) {\n        return instance.get(`profile/${userId}`)\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/${userId}`)\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status`, {status: status})\n    }\n}\nexport const authAPI = {\n    authMe() {\n        return instance.get(`auth/me`)\n    },\n    login(email, password, rememberMe = false) {\n        return instance.post(`auth/login` ,{\n            email,\n            password,\n            rememberMe\n        })\n    },\n    logout() {\n        return instance.delete(`auth/login` )\n    },\n}\n","export let updateObjectInArray = (items, itemId, objectName, object) => {\n    return items.map(u => {\n        if (u[objectName] === itemId) {\n            return {...u, ...object};\n        }\n        return u;\n    })\n}","import {usersAPI} from \"../api/api\";\nimport {updateObjectInArray} from \"../utils/object-helpers\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\nlet initialState = {\n    usersList: [],\n    pageSize: 20,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingProgress: [],\n};\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                usersList: updateObjectInArray(state.usersList, action.userId, 'id', {followed: true} )\n                // usersList: state.usersList.map(u => {\n                //     if (u.id === action.userId) {\n                //         return {...u, followed: true};\n                //     }\n                //     return u;\n                // })\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                usersList: updateObjectInArray(state.usersList, action.userId, 'id', {followed: false} )\n                // usersList: state.usersList.map(u => {\n                //     if (u.id === action.userId) {\n                //         return {...u, followed: false};\n                //     }\n                //     return u;\n                // })\n            }\n        case SET_USERS:\n            return {\n                ...state,\n                usersList: action.users\n            }\n        case SET_CURRENT_PAGE:\n            return {\n                ...state,\n                currentPage: action.currentPage,\n            }\n        case SET_TOTAL_USERS_COUNT:\n            return {\n                ...state,\n                totalUsersCount: action.totalUsersCount,\n            }\n        case TOGGLE_IS_FETCHING:\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\n            return {\n                ...state,\n                followingProgress: action.isFetching ? [...state.followingProgress, action.userId]\n                    : state.followingProgress.filter(id => id !== action.userId),\n            }\n        default:\n            return state;\n    }\n}\nexport const follow = (userId) => {\n    return {\n        type: FOLLOW,\n        userId\n    }\n}\nexport const unfollow = (userId) => {\n    return {\n        type: UNFOLLOW,\n        userId\n    }\n}\nexport const setUsers = (users) => {\n    return {\n        type: SET_USERS,\n        users\n    }\n}\nexport const setCurrentPage = (currentPage) => {\n    return {\n        type: SET_CURRENT_PAGE,\n        currentPage\n    }\n}\nexport const setTotalUsersCount = (totalUsersCount) => {\n    return {\n        type: SET_TOTAL_USERS_COUNT,\n        totalUsersCount\n    }\n}\nexport const toggleIsFetching = (isFetching) => {\n    return {\n        type: TOGGLE_IS_FETCHING,\n        isFetching\n    }\n}\nexport const toggleFollowingProgress = (isFetching, userId) => {\n    return {\n        type: TOGGLE_IS_FOLLOWING_PROGRESS,\n        isFetching,\n        userId\n    }\n}\nexport const getUsers = (currentPage, pageSize) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n        dispatch(setCurrentPage(currentPage));\n        let data = await usersAPI.getUsers(currentPage, pageSize)\n        dispatch(toggleIsFetching(false));\n        dispatch(setUsers(data.items));\n        dispatch(setTotalUsersCount(data.totalCount));\n    }\n}\nexport const followUnFollow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleFollowingProgress(true, userId));\n    let response = await apiMethod(userId)\n    if (response.data.resultCode === 0) {\n        dispatch(actionCreator(userId))\n    }\n    dispatch(toggleFollowingProgress(false, userId));\n}\nexport const wantToFollow = (userId) => {\n    return async (dispatch) => {\n        followUnFollow(dispatch, userId, usersAPI.follow.bind(usersAPI), follow)\n    }\n}\nexport const wantToUnfollow = (userId) => {\n    return async (dispatch) => {\n        followUnFollow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollow)\n    }\n}\nexport default usersReducer;\n","import s from \"./Users.module.css\";\nimport {useState} from \"react\";\nimport cn from 'classnames';\n\nconst Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionNumber = portionNumber * portionSize;\n\n    return (\n        <div>\n            {portionNumber > 1 &&\n            <button onClick={() => {\n                setPortionNumber(portionNumber - 1)\n            }} className={s.arrow}>&#8617;</button>}\n            {pages.filter(p => p >= leftPortionNumber && p <= rightPortionNumber).map(\n                (p) => {\n                    return <span\n                        className={\n                            cn({\n                                [s.selectedPage]: currentPage === p\n                            }, s.span)\n                        }\n                        key={p}\n                        onClick={(e) => {\n                            onPageChanged(p)\n                        }}\n                    >{p}</span>\n                })}\n            {portionCount > portionNumber &&\n            <button onClick={() => {\n                setPortionNumber(portionNumber + 1)\n            }} className={s.arrow}>&#8618;</button>}\n        </div>\n    )\n}\nexport default Paginator;\n","export default __webpack_public_path__ + \"static/media/user.e4f0e234.jpg\";","import s from \"./Users.module.css\";\nimport userPhoto from \"../../assets/images/user.jpg\";\nimport {NavLink} from \"react-router-dom\";\n\n\nconst UserItem = ({user, followingProgress,wantToUnfollow,wantToFollow  }) => {\nreturn <div className={s.wrapper}>\n\n\n            <NavLink to={'/my_page/' + user.id}>\n                <img\n                    width='60'\n                    src={user.photos.small != null ? user.photos.small : userPhoto}\n                    alt=\"\"/></NavLink>\n\n            <div>{user.followed ? <button disabled={followingProgress.some(id => id === user.id)} onClick={() => {\n                wantToUnfollow(user.id)\n            }}>Unfollow</button> : <button disabled={followingProgress.some(id => id === user.id)} onClick={() => {\n                wantToFollow(user.id)\n\n\n            }}>Follow</button>}</div>\n            <h3>{user.name}</h3>\n            <h3>{user.status}</h3>\n            <p>{'user.location.country'}, {'user.location.city'} </p>\n\n        </div>\n}\nexport default UserItem","import s from \"./Users.module.css\";\nimport Paginator from \"./Paginator\";\nimport UserItem from \"./UserItem\";\n\n\nconst Users = (props) => {\n    let usersItems = props.usersList\n        .map(u => <UserItem user={u} followingProgress={props.followingProgress} wantToUnfollow={props.wantToUnfollow} wantToFollow={props.wantToFollow}/>)\n    return (\n        <div className={s.app_users}>\n            <Paginator totalItemsCount={props.totalUsersCount} pageSize={props.pageSize} currentPage={props.currentPage}\n                       onPageChanged={props.onPageChanged} portionSize={10}/>\n            <br/>\n            {usersItems}\n        </div>\n    )\n}\nexport default Users","export default __webpack_public_path__ + \"static/media/preloader.7fb053b2.svg\";","import preloader from \"../../../assets/images/preloader.svg\";\n\nconst Preloader = (props) => {\n\n    return <div><img src={preloader}/></div>\n}\nexport default Preloader","import {createSelector} from \"reselect\";\n\nconst getUserSelector = (state) => {\n    return state.usersPage.usersList;\n}\nexport const getUsersList = createSelector(getUserSelector,(users) => {\n    return users\n})\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize;\n}\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totalUsersCount;\n}\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage;\n}\nexport const getProgressFetching = (state) => {\n    return state.usersPage.isFetching;\n}\nexport const getFollowingProgress = (state) => {\n    return state.usersPage.followingProgress;\n}","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {\n    follow, getUsers,\n    setCurrentPage,\n    toggleFollowingProgress,\n    unfollow, wantToFollow, wantToUnfollow,\n} from \"../../Redux/users-reducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {\n    getCurrentPage,\n    getFollowingProgress,\n    getPageSize,\n    getProgressFetching,\n    getTotalUsersCount, getUsersList\n} from \"../../Redux/users-selectors\";\n\nclass usersContainer extends React.Component {\n    componentDidMount() {\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.getUsers(pageNumber, this.props.pageSize);\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users\n                totalUsersCount={this.props.totalUsersCount}\n                pageSize={this.props.pageSize}\n                usersList={this.props.usersList}\n                currentPage={this.props.currentPage}\n                onPageChanged={this.onPageChanged}\n                unfollowUser={this.props.unfollow}\n                followUser={this.props.follow}\n                toggleFollowingProgress={this.props.toggleFollowingProgress}\n                followingProgress={this.props.followingProgress}\n                wantToFollow={this.props.wantToFollow}\n                wantToUnfollow={this.props.wantToUnfollow}\n            />\n        </>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        usersList: getUsersList(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getProgressFetching(state),\n        followingProgress: getFollowingProgress(state),\n    }\n}\nexport default connect(mapStateToProps, {\n    follow,\n    unfollow,\n    setCurrentPage,\n    toggleFollowingProgress,\n    getUsers,\n    wantToFollow,\n    wantToUnfollow\n})(usersContainer)\n","import React, {useState, useEffect} from 'react';\n\nconst ProfileStatusWithHooks = (props) => {\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n    useEffect(() => {\n        setStatus(props.status);\n    }, [props.status])\n    const activateEditMode = () => {\n        setEditMode(true)\n    }\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status)\n    }\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n    return (\n        <div>\n            {!editMode && <div>\n                <span onDoubleClick={activateEditMode}>{props.status || 'No data'}</span>\n            </div>}\n            {editMode &&\n            <div>\n                <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status}/>\n            </div>}\n        </div>\n    )\n}\n\n\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\nconst ProfileInfo = (props) => {\n    if (!props.profile) {\n        return <Preloader/>\n    }\n    return (\n        <div>\n            <div>\n\n                <img src={props.profile.photos.large}/>\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\n            </div>\n        </div>\n    )\n}\nexport default ProfileInfo;","import s from \"./OnePost.module.css\";\nconst OnePost = (props) => {\n  return (\n    <div className={s.postItem}>\n      <div className={s.item}>\n        {props.message}\n      </div>\n      <div className={s.likesPost}>Like {props.likecount}</div>\n    </div>\n  );\n};\nexport default OnePost;\n","import OnePost from \"./OnePost/OnePost\";\nimport s from \"./Posts.module.css\";\nimport React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/FormControls/FormControls\";\n\n\nconst Posts = React.memo(props => {\n\n    let postsElements = props.postsData\n        .map(p => <OnePost id={p.id} likecount={p.likesCount} message={p.message} key={p.id}/>);\n\n    let createPost = (values) => {\n        props.createPost(values.newPostBody);\n    }\n    return (\n\n        <div>\n            <div className={s.creationPost}>\n                <h1 className={s.item}>My Posts</h1>\n                <PostsFormRedux onSubmit={createPost}/>\n            </div>\n            {postsElements}\n        </div>\n    );\n});\n\nconst maxLength10 = maxLengthCreator(10);\nconst PostsForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field placeholder=\"What's new?\" name='newPostBody' component={Textarea}\n                   validate={[requiredField, maxLength10]}\n            />\n            <br/>\n            <button>Add post</button>\n        </form>\n    )\n}\n\nconst PostsFormRedux = reduxForm({form: 'ProfilePostsForm'})(PostsForm)\nexport default Posts;\n","import {profileAPI} from \"../api/api\";\n\nconst ADD_POST = 'ADD-POST';\nconst SET_USERS_PROFILE = 'SET-USERS-PROFILE';\nconst SET_STATUS = 'SET-STATUS';\nconst DELETE_POST = 'DELETE-POST';\nlet initialState = {\n    postsData: [\n        {id: 1, message: 'Hi, what\\'s your name?', likesCount: 16},\n        {id: 2, message: 'Hi', likesCount: 90},\n        {id: 3, message: 'I am Artem', likesCount: 0},\n        {id: 4, message: 'I am Vlados', likesCount: 0},\n        {id: 5, message: 'I am Lukaa', likesCount: 10},\n    ],\n    profile: null,\n    status: '',\n}\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: 6,\n                message: action.newPostText,\n                likesCount: 0\n            };\n            return {\n                ...state,\n                postsData: [...state.postsData, newPost]\n\n            };\n        }\n        case SET_USERS_PROFILE: {\n            return {\n                ...state,\n                profile: action.profile\n            }\n        }\n        case SET_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            }\n        }\n        case DELETE_POST: {\n            return {\n                ...state,\n                postsData: state.postsData.filter(p => p.id != action.postId)\n            }\n        }\n        default:\n            return state;\n    }\n\n}\nexport const createPost = (newPostText) => {\n    return {\n        type: ADD_POST,\n        newPostText\n    }\n}\nexport const setUserProfile = (profile) => {\n    return {\n        type: SET_USERS_PROFILE,\n        profile\n    }\n}\nexport const setStatus = (status) => {\n    return {\n        type: SET_STATUS,\n        status\n    }\n}\nexport const deletePost = (postId) => {\n    return {\n        type: DELETE_POST,\n        postId\n    }\n}\nexport const setUserInBody = (userId) => {\n    return async (dispatch) => {\n        let response = await profileAPI.setUserBodyProfile(userId)\n        dispatch(setUserProfile(response.data))\n    }\n}\nexport const getStatus = (userId) => async (dispatch) => {\n    let response = await profileAPI.getStatus(userId)\n    dispatch(setStatus(response.data))\n}\nexport const updateStatus = (status) => async (dispatch) => {\n    let response = await profileAPI.updateStatus(status)\n    if (response.data.resultCode === 0) {\n        dispatch(setStatus(status))\n    }\n}\nexport default profileReducer;","import React from \"react\";\nimport Posts from \"./Posts\";\n\nimport {connect} from \"react-redux\";\nimport {createPost} from \"../../../Redux/profile-reducer\";\n\nconst mapStateToProps = (state) => {\n    return {\n        postsData: state.profilePage.postsData,\n        newPostText: state.profilePage.newPostText\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        createPost: (newPostText) => {\n            dispatch(createPost(newPostText))\n        }\n    }\n}\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts)\nexport default PostsContainer;\n","import s from './Profile.module.css';\nimport ProfileInfo from \"./ProfileAbout/ProfileInfo\";\nimport React from \"react\";\nimport PostsContainer from \"./Posts/PostsContainer\";\n\nconst Profile = (props) => {\n    debugger\n    return (\n        <main className={s.app_profile}>\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n            <PostsContainer />\n        </main>\n    );\n};\nexport default Profile;","import React from \"react\";\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, setUserInBody, setUserProfile, updateStatus} from \"../../Redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n    componentDidMount() {\n        debugger\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push('/login')\n            }\n        }\n        this.props.setUserInBody(userId);\n        this.props.getStatus(userId);\n    }\n\n    render() {\n        return (<Profile {...this.props} profile={this.props.profile} status={this.props.status}\n                         updateStatus={this.props.updateStatus}/>)\n\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth,\n})\nexport default compose(\n    connect(mapStateToProps, {\n        setUserProfile,\n        setUserInBody,\n        getStatus,\n        updateStatus\n    }),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer)\n","import s from \"./Header.module.css\";\nimport React from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\nconst Header = (props) => {\n    return (\n        <header className={s.app_header}>\n            <img src=\"https://www.searchpng.com/wp-content/uploads/2019/03/Rocket-Icon-PNG-715x715.png\"/>\n            <div className={s.loginBlock}>\n                {props.isAuth ? <div>{props.login} <br/> <button onClick={props.logout}>Logout</button></div>: <NavLink to='/login'>Login</NavLink>}\n\n            </div>\n        </header>\n    );\n};\nexport default Header;\n","import {authAPI, usersAPI} from \"../api/api\";\nimport {Redirect} from \"react-router\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_USER_DATA = '/auth/SET_USER_DATA';\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false,\n}\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.payload,\n            }\n\n        default:\n            return state\n    }\n}\nexport const setAuthUserData = (userId, email, login, isAuth) => {\n    return {\n        type: SET_USER_DATA,\n        payload: {\n            isAuth,\n            userId,\n            email,\n            login\n        }\n    }\n}\nexport const setAuthMe = () => {\n    return async (dispatch) => {\n        let response = await authAPI.authMe();\n        if (response.data.resultCode === 0) {\n            let {id, email, login} = response.data.data;\n            dispatch(setAuthUserData(id, email, login, true))\n        }\n\n    }\n}\nexport const login = (email, password, rememberMe) => {\n\n    return async (dispatch) => {\n        let response = await authAPI.login(email, password, rememberMe)\n        if (response.data.resultCode === 0) {\n            dispatch(setAuthMe())\n        } else {\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Something went wrong';\n            dispatch(stopSubmit('login', {\n                _error: message\n            }))\n        }\n\n\n    }\n}\nexport const logout = () => {\n    return async (dispatch) => {\n        let response = await authAPI.logout()\n        if (response.data.resultCode === 0) {\n            dispatch(setAuthUserData(null, null, null, false))\n        }\n\n    }\n}\nexport default authReducer;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../Redux/auth-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\n\nclass HeaderContainer extends React.Component {\n\n\n    render() {\n        return <Header {...this.props}/>\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login,\n})\nexport default compose(withRouter,\n    connect(mapStateToProps, {logout})) (HeaderContainer);\n","import s from './Login.module.css'\nimport {Field, reduxForm} from \"redux-form\";\nimport {fieldCreator, Input} from \"../common/FormControls/FormControls\";\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../Redux/auth-reducer\";\nimport {Redirect} from \"react-router\";\n\nconst LoginForm = ({handleSubmit, error}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                {fieldCreator('Login', 'email', 'text', Input, [requiredField])}\n            </div>\n            <br/>\n            <div>\n                {fieldCreator('Password', 'password', 'password', Input, [requiredField])}\n            </div>\n            <br/>\n            <div>\n                Remember me {fieldCreator('', 'rememberMe', 'checkbox', Input, [])}\n            </div>\n            <br/>\n            {error && <div className={s.formError}>\n                {error}\n            </div>}\n\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n\n    )\n}\nconst LoginReduxForm = reduxForm({\n    form: 'login'\n})(LoginForm)\n\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe)\n    }\n    if (props.isAuth) {\n        return <Redirect to={'/my_page'}/>\n    }\n\n    return (\n        <div className={s.wrapper}>\n            <h1>Login</h1>\n            <LoginReduxForm onSubmit={onSubmit}/>\n        </div>\n    )\n}\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\nexport default connect(mapStateToProps, {\n    login\n})(Login);","import {authAPI, usersAPI} from \"../api/api\";\nimport {Redirect} from \"react-router\";\nimport {stopSubmit} from \"redux-form\";\nimport {setAuthMe} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = '/auth/INITIALIZED_SUCCESS';\n\nlet initialState = {\n    initialized: false\n}\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true,\n            }\n\n        default:\n            return state\n    }\n}\nexport const initializedSuccess = () => {\n    return {\n        type: INITIALIZED_SUCCESS,\n    }\n}\nexport const initializeApp = () => {\n    return (dispatch) => {\n        let promise = dispatch(setAuthMe())\n        Promise.all([promise]).then(() => {\n            dispatch(initializedSuccess())\n        }\n    )\n\n    }\n}\n\nexport default appReducer;\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport profileReducer from \"./profile-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport thunkMiddleware from 'redux-thunk'\nimport {reducer as formReducer} from 'redux-form'\nimport appReducer from \"./app-reducer\";\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    messagesPage: dialogsReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer\n})\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\nexport default store;","import \"./App.css\";\nimport Sidebar from \"./Components/Sidebar/Sidebar\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport React, {Suspense} from \"react\";\nimport News from \"./Components/News/News\";\nimport Settings from \"./Components/Settings/Settings\";\nimport UsersContainer from \"./Components/Users/UsersContainer\";\nimport ProfileContainer from \"./Components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\nimport Login from \"./Components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {initializeApp} from \"./Redux/app-reducer\";\nimport Preloader from \"./Components/common/Preloader/Preloader\";\nimport store from \"./Redux/redux-store\";\n//import MessagesContainer from \"./Components/Messages/MessagesContainer\";\n\nconst MessagesContainer = React.lazy(() => import('./Components/Messages/MessagesContainer'));\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n\n            <div className=\"app_wrapper\">\n\n                <HeaderContainer/>\n                <Sidebar/>\n\n                <div className=\"app_main\">\n                    <Route path=\"/my_page/:userId?\"\n                           render={() =>\n                               <ProfileContainer/>}/>\n                    <Route path=\"/my_messages\"\n                           render={() => {\n                               return <Suspense fallback={<div>Loading...</div>}>\n                                   <MessagesContainer/>\n                               </Suspense>\n                           }\n                           }/>\n\n                    <Route path='/my_news'\n                           render={() => <News/>}/>\n                    <Route path='/my_settings'\n                           render={() => <Settings/>}/>\n                    <Route path='/users'\n                           render={() => <UsersContainer/>}/>\n                    <Route path='/login'\n                           render={() => <Login/>}/>\n\n                </div>\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = connect(mapStateToProps, {\n    initializeApp,\n})(App);\nlet MainApp = () => {\n    return <Provider store={store}>\n        <React.StrictMode>\n            <BrowserRouter>\n                <AppContainer/>\n            </BrowserRouter>\n        </React.StrictMode>,\n    </Provider>\n}\nexport default MainApp;\n","import reportWebVitals from './reportWebVitals';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainApp from \"./App\";\n\nReactDOM.render(\n    <MainApp />,\n    document.getElementById('root')\n);\n\n\nreportWebVitals();\n","import s from './FormControls.module.css'\nimport {requiredField} from \"../../../utils/validators/validators\";\nimport {Field} from \"redux-form\";\n\nconst FormControl = ({input, meta, child, ...props}) => {\n    let hasError = meta.touched && meta.error;\n    return (\n        <div className={s.form_control + ' ' + (hasError ? s.error : '')}>\n            <div>\n                {props.children}\n            </div>\n            {hasError && <span>{meta.error}</span>}\n        </div>\n    )\n}\nexport const Textarea = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\n}\nexport const Input = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props} ><input {...input} {...restProps}/></FormControl>\n}\nexport const fieldCreator = (placeholder, name, type, component, validators) => <Field placeholder={placeholder} name={name} type={type} component={component}\n                                                 validate={validators}/>"," export const requiredField = (value) => {\n    if (value) {\n        return undefined\n    } else {\n        return 'Required field'\n    }\n}\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) {\n        return `Max length is ${maxLength}`\n    }\n    else {\n        return undefined\n    }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"OnePost_item__3gVXc\",\"postItem\":\"OnePost_postItem__1_53h\",\"likesPost\":\"OnePost_likesPost__2gpnE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"creationPost\":\"Posts_creationPost__2lt8J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_control\":\"FormControls_form_control__24fX_\",\"error\":\"FormControls_error__JPAni\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app_header\":\"Header_app_header__35lB8\",\"loginBlock\":\"Header_loginBlock__2dPsT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__3zMAX\",\"formError\":\"Login_formError__MJBNm\"};"],"sourceRoot":""}