{"version":3,"sources":["Components/Messages/Messages.module.css","Components/Messages/DialogItem/DialogItem.jsx","Components/Messages/MessageItem/MessageItem.jsx","Components/Messages/Messages.jsx","Components/Messages/MessagesContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","item","avatar","src","alt","to","id","activeClassName","activeLink","name","MessageItem","messages_list","wrapper","message_item","value","maxLength10","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","type","validate","requiredField","Messages","dialogsElements","dialogsData","map","d","messagesElements","messagesData","m","isAuth","my_dialogs","dialog_items","dialogs_messages","values","creationMessage","newMessageBody","compose","connect","state","messagesPage","newMessageText","dispatch","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,WAAa,6BAA6B,aAAe,+BAA+B,KAAO,uBAAuB,WAAa,6BAA6B,iBAAmB,mCAAmC,OAAS,yBAAyB,aAAe,+BAA+B,cAAgB,gCAAgC,QAAU,4B,2FCYnWC,EATI,SAACC,GAChB,OACI,sBAAKC,UAAWC,IAAEC,KAAlB,UAAwB,qBAAKF,UAAWC,IAAEE,OAAQC,IAAI,8FAA8FC,IAAI,KAAI,cAAC,IAAD,CAASC,GAAI,gBAAkBP,EAAMQ,GAChKC,gBAAiBP,IAAEQ,WADwG,SAC3FV,EAAMW,WCShEC,EAXK,SAACZ,GACjB,OACI,qBAAKC,UAAWC,IAAEW,cAAlB,SACI,qBAAKZ,UAAWC,IAAEY,QAAlB,SACI,oBAAIb,UAAWC,IAAEa,aAAjB,SAAgCf,EAAMgB,a,wCC6BhDC,EAAcC,YAAiB,IAc/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAbL,SAACpB,GAEpB,OACI,uBAAMsB,SAAUtB,EAAMuB,aAAtB,UACI,cAACC,EAAA,EAAD,CAAOb,KAAK,iBAAiBc,YAAY,qBAAqBC,UAAWC,IAAUC,KAAK,OACjFC,SAAU,CAACC,IAAeb,KACjC,uBACA,gDASGc,EA7CE,SAAC/B,GACd,IAAIgC,EAAkBhC,EAAMiC,YACvBC,KAAI,SAAAC,GAAC,OACF,cAAC,EAAD,CAAYxB,KAAMwB,EAAExB,KAAMH,GAAI2B,EAAE3B,IAAS2B,EAAE3B,OAG/C4B,EAAmBpC,EAAMqC,aACxBH,KAAI,SAAAI,GAAC,OACF,cAAC,EAAD,CAAatB,MAAOsB,EAAEtB,OAAYsB,EAAE9B,OAK5C,OAAKR,EAAMuC,OAKP,sBAAKtC,UAAWC,IAAEsC,WAAlB,UACI,qBAAKvC,UAAWC,IAAEuC,aAAlB,SACKT,IAEL,sBAAK/B,UAAWC,IAAEwC,iBAAlB,UACKN,EADL,OAEA,cAACjB,EAAD,CAAqBG,SAdT,SAACqB,GACjB3C,EAAM4C,gBAAgBD,EAAOE,sBAGtB,cAAC,IAAD,CAAUtC,GAAI,Y,yBCAduC,sBACXC,aAfoB,SAACC,GACrB,MAAO,CACHX,aAAcW,EAAMC,aAAaZ,aACjCJ,YAAae,EAAMC,aAAahB,YAChCiB,eAAgBF,EAAMC,aAAaC,mBAGhB,SAACC,GACxB,MAAO,CACHP,gBAAiB,SAACC,GACdM,EAASP,YAAgBC,SAMjCO,IAFWN,CAGbf","file":"static/js/3.f38635b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"my_dialogs\":\"Messages_my_dialogs__hevD9\",\"dialog_items\":\"Messages_dialog_items__1F27Z\",\"item\":\"Messages_item__1ZBYD\",\"activeLink\":\"Messages_activeLink__3kqcx\",\"dialogs_messages\":\"Messages_dialogs_messages__1HmG7\",\"avatar\":\"Messages_avatar__1AabL\",\"message_item\":\"Messages_message_item__1Ee3B\",\"messages_list\":\"Messages_messages_list__2pZ6F\",\"wrapper\":\"Messages_wrapper__3jM6F\"};","import s from './../Messages.module.css';\nimport React from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n    return (\n        <div className={s.item}><img className={s.avatar} src=\"https://image.shutterstock.com/image-vector/vector-male-face-avatar-logo-600w-424801768.jpg\" alt=\"\"/><NavLink to={'/my_messages/' + props.id}\n                                         activeClassName={s.activeLink}>{props.name}</NavLink></div>\n    )\n}\n\n\n\nexport default DialogItem;","import s from './../Messages.module.css'\nimport React from \"react\";\n\n\n\nconst MessageItem = (props) => {\n    return (\n        <div className={s.messages_list}>\n            <div className={s.wrapper}>\n                <h3 className={s.message_item}>{props.value}</h3>\n            </div>\n        </div>\n    )\n}\n\n\nexport default MessageItem;","import s from './Messages.module.css';\nimport React from \"react\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport MessageItem from \"./MessageItem/MessageItem\";\nimport {Redirect} from \"react-router\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../common/FormControls/FormControls\";\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\n\n\nconst Messages = (props) => {\n    let dialogsElements = props.dialogsData\n        .map(d =>\n            <DialogItem name={d.name} id={d.id} key={d.id}/>\n        );\n\n    let messagesElements = props.messagesData\n        .map(m =>\n            <MessageItem value={m.value} key={m.id}/>\n        )\n    let addNewMessage = (values) => {\n        props.creationMessage(values.newMessageBody)\n    }\n    if (!props.isAuth) {\n        return <Redirect to={'/login'}/>\n    }\n    return (\n\n        <div className={s.my_dialogs}>\n            <div className={s.dialog_items}>\n                {dialogsElements}\n            </div>\n            <div className={s.dialogs_messages}>\n                {messagesElements} </div>\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\n        </div>\n    );\n}\nconst maxLength10 = maxLengthCreator(10);\nconst AddMessageForm = (props) => {\n\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field name='newMessageBody' placeholder='Write your message' component={Textarea} type='text'\n                   validate={[requiredField, maxLength10]}/>\n            <br/>\n            <button>Send</button>\n\n        </form>\n    )\n}\n\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\n\n\nexport default Messages;","import React from \"react\";\nimport {\n    creationMessage,\n} from \"../../Redux/dialogs-reducer\";\nimport Messages from \"./Messages\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nconst mapStateToProps = (state) => {\n    return {\n        messagesData: state.messagesPage.messagesData,\n        dialogsData: state.messagesPage.dialogsData,\n        newMessageText: state.messagesPage.newMessageText,\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        creationMessage: (newMessageBody) => {\n            dispatch(creationMessage(newMessageBody))\n        },\n    }\n}\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Messages);"],"sourceRoot":""}